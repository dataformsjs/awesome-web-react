<!doctype html>
<!--
    Based on example from:
    https://www.dataformsjs.com/examples/image-gallery-react.htm

    Original License: MIT
    Re-published here with CC0 "Public Domain" license.
-->
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>DataFormsJS React Image Gallery Demo</title>
        <link href="https://www.dataformsjs.com/js/prism-1.22.0/prism.css" rel="stylesheet">
        <link rel="stylesheet" href="dataformjs-image-gallery.css" data-css-vars-ponyfill>
    </head>
    <body>
        <section class="page-title">
            <h1 tabindex="1">DataFormsJS React Component &#x3C;ImageGallery&#x3E;</h1>
            <img src="https://www.dataformsjs.com/img/examples/image-gallery.svg" alt="Image Gallery" />
        </section>

        <div class="about">
            <section class="all-examples">
                <p>
                    <a href="/" tabindex="2">üè† Back to all Examples</a>
                </p>
                <p>
                    <a href="https://www.dataformsjs.com/" tabindex="3" target="_blank" rel="noopener">https://www.dataformsjs.com/</a>
                </p>
            </section>

            <section>
                <h2 tabindex="4">Features</h2>
                <ul class="emoji-list">
                    <li data-emoji="üñºÔ∏è">Shows Overlay with large Image for Thumbnails.</li>
                    <li data-emoji="üé®">Minimal UI so the focus is on the Content.</li>
                    <li data-emoji="üí°">Easy to use from any device and fully accessible.</li>
                    <li data-emoji="üì±">Handles Swipe left/right and Tap to close on Mobile Devices.</li>
                    <li data-emoji="üíª">Fully works on Desktop or Laptop Computer from Mouse. Click to open gallery and Back and Forward buttons are displayed when using a Mouse.</li>
                    <li data-emoji="‚å®Ô∏è">Fully works from a Keyboard. If using [tabindex] so thumbnails can be selected a spacebar can be used to open the gallery and Left/Right/Escape Keys can be used for navigation.</li>
                    <li data-emoji="üè∑Ô∏è">Displays [title] of the image with index position by default. Both labels can be hidden through CSS.</li>
                    <li data-emoji="üïí">Displays a loading indicator if an image takes longer than 2 seconds to load. The text and timeout can be changed by setting props [loadingText] and [loadingTimeout].</li>
                    <li data-emoji="üöÄ">Supports next-gen image formats AVIF and WebP by using optional props [image_avif] and [image_webp]. When using next-gen image formats a default/fallback [image] must be included similar to how the HTML &lt;picture&gt; element works.</li>
                    <li data-emoji="‚ú®">Image loading is optimized so that large images are loaded only when viewed and the previous and next images preloaded while the user is viewing the focused image.</li>
                    <li data-emoji="üé®">Overlay style and layout can easily changed with CSS.</li>
                    <li data-emoji="üòä">Small Download - Standalone Script is 4.2 kB when gzipped and minified or it adds about 3 kB when bundled with other React code using webpack.</li>
                    <li data-emoji="‚öôÔ∏è">The code exists in a single file so it's easy to copy and modify if changes or portions of it are needed as part of a custom app.</li>
                    <li data-emoji="üåê">Works with all Browsers.</li>
                </ul>
            </section>

            <section>
                <h2 tabindex="5" class="github">                
                    <img src="https://www.dataformsjs.com/examples/img/GitHub-Mark-32px.png" alt="GitHub">
                    <span>Full Source Code</span>
                </h2>
                <ul class="source-code">
                    <li>
                        <a href="https://github.com/dataformsjs/dataformsjs/blob/master/js/react/es6/ImageGallery.js" target="_blank" ref="noopener">
                            <img src="https://www.dataformsjs.com/examples/img/Unofficial_JavaScript_logo_2.svg" width="64" alt="JavaScript">
                            <strong>React Component</strong>
                        </a>
                    </li>
                    <li>
                        <a href="https://github.com/dataformsjs/awesome-web-react/blob/master/examples/image-and-media-controls/dataformjs-image-gallery.htm" target="_blank" ref="noopener">
                            <img src="https://www.dataformsjs.com/examples/img/HTML5_Logo.svg" width="64" alt="HTML">
                            <strong>HTML for this Page</strong>
                        </a>
                    </li>
                </ul>
            </section>

            <section>
                <h2 tabindex="6">Example Usage and Code</h2>
                <pre class="language-html">
                    <code>&#x3C;!--
npm install dataformsjs

// Import &lt;ImageGallery&gt; using one of the following options:
//
import { ImageGallery } from 'dataformsjs/js/react/es6/DataFormsJS';
import ImageGallery from 'dataformsjs/js/react/es6/ImageGallery';

// Or include JavaScript file directly:
--&#x3E;
&#x3C;script type=&#x22;module&#x22; src=&#x22;dataformsjs/js/react/es6/ImageGallery.min.js&#x22;&#x3E;&#x3C;/script&#x3E;
&#x3C;script nomodule src=&#x22;dataformsjs/js/react/es5/ImageGallery.min.js&#x22;&#x3E;&#x3C;/script&#x3E;

&#x3C;!--
// Define Array of Images
const images = [
    {
        thumbnail: "{url}",
        image: "{url}",
        title: "{optional text}"
    },
    {
        thumbnail: "{url}",
        image: "{url}",
        image_avif: "{optional url}",
        image_webp: "{optional url}",
        title: "{optional text}"
    },
];

// Example Optional Image Template
function AppImage(props) {
    return &lt;img
        src={props.thumbnail}
        alt={props.title}
        tabIndex={props.tabIndex}
        onClick={props.onClick}
        onKeyDown={props.onKeyDown}
        key={props.key}
        style={{
            cursor: 'pointer'
        }} /&gt;
}
--&#x3E;
                    
&#x3C;!-- 1) Using a basic image - no template specified --&#x3E;
&#x3C;ImageGallery images={props.data.images} /&#x3E;

&#x3C;!-- 2) Include [tabIndex] so users can tab from keyboard --&#x3E;
&#x3C;ImageGallery images={props.data.images} tabIndex={5} /&#x3E;

&#x3C;!-- 3) Specify custom template using [template] attribute --&#x3E;
&#x3C;ImageGallery images={props.data.images} template={&#x3C;AppImage /&#x3E;} /&#x3E;

&#x3C;!-- 4) Specify Template as a Child Element --&#x3E;
&#x3C;ImageGallery images={props.data.images}&#x3E;
    &#x3C;AppImage /&#x3E;
&#x3C;/ImageGallery&#x3E;

&#x3C;!-- 5) Specify a Different Loading Message and Timeout.
Defaults to &quot;Loading...&quot; and 2000 milliseconds. --&#x3E;
&lt;ImageGallery
    images={props.data.images}
    loadingText=&quot;Carregando...&quot;
    loadingTimeout={1000} /&gt;

&#x3C;!--
To override default styles use `!important` and specify the style
attributes to override in any style sheet on the page or define your
own style sheet before the component runs using id `image-gallery-css`.
--&#x3E;
&lt;style&gt;
.image-gallery-overlay { background-color: black !important; }
.image-gallery-overlay { background-color: rgba(0,0,0,.7) !important; }

.image-gallery-overlay .btn-previous,
.image-gallery-overlay .btn-next { background-color: blue !important; }
&lt;/style&gt;
&lt;style id=&quot;image-gallery-css&quot;&gt;...&lt;/style&gt;
&lt;link rel=&quot;stylesheet&quot; id=&quot;image-gallery-css&quot; href=&quot;css/image-gallery.css&quot;&gt;</code>
                </pre>
            </section>
        </div>

        <div id="root"></div>

        <!-- React -->
        <!--
        <script src="https://cdn.jsdelivr.net/npm/react@17/umd/react.development.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/react-dom@17/umd/react-dom.development.js" crossorigin="anonymous"></script>
        -->
        <script src="https://cdn.jsdelivr.net/npm/react@17.0.2/umd/react.production.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/react-dom@17.0.2/umd/react-dom.production.min.js" crossorigin="anonymous"></script>

        <!-- DataFormsJS React Components -->
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/ErrorBoundary.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/JsonData.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/LazyLoad.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/CssVars.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/ImageGallery.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/ErrorBoundary.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/JsonData.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/LazyLoad.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/CssVars.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/ImageGallery.min.js"></script>

        <!-- DataFormsJS JSX Loader -->
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/jsxLoader.min.js"></script>
        <script>
            // Set to `true` to see compiler details
            jsxLoader.logCompileTime = false;
            jsxLoader.logCompileDetails = false;
        </script>

        <!-- App Code -->
        <script type="text/babel" src="dataformjs-image-gallery.jsx"></script>

        <!--
            https://prismjs.com/
        -->
        <script src="https://www.dataformsjs.com/js/prism-1.22.0/prism.modified.min.js"></script>
    </body>
</html>